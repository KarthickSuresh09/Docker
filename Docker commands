if execute docker command it will show all the docker command 
Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Common Commands:
  run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information

Management Commands:
  builder     Manage builds
  checkpoint  Manage checkpoints
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  plugin      Manage plugins
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Swarm Commands:
  config      Manage Swarm configs
  node        Manage Swarm nodes
  secret      Manage Swarm secrets
  service     Manage Swarm services
  stack       Manage Swarm stacks
  swarm       Manage Swarm

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes

Global Options:
      --config string      Location of client config files (default "/home/ubuntu/.docker")
  -c, --context string     Name of the context to use to connect to the daemon (overrides DOCKER_HOST env var and default context set with "docker
                           context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket to connect to
  -l, --log-level string   Set the logging level ("debug", "info", "warn", "error", "fatal") (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default "/home/ubuntu/.docker/ca.pem")
      --tlscert string     Path to TLS certificate file (default "/home/ubuntu/.docker/cert.pem")
      --tlskey string      Path to TLS key file (default "/home/ubuntu/.docker/key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Run 'docker COMMAND --help' for more information on a command.

If you want to list all containers running state
docker ps

telling Docker to run or start a container from the NGINX image
docker run -d nginx

If you want to your reset a docker and it will delete container and images(DON'T USE THIS COMMAND IN PROD SERVER)
docker system prune --all

it will show the docker image
docker images

If you want to stop conatiner 
docker stop CONTAIER ID OR CONTAINER NAME

If you want to list all the containers stop and running state
docker ps -a

It will remove the container
docker rm CONTAIER ID OR CONTAINER NAME

It will remove the image
docker rmi IMAGE ID OR IMAGE NAME


If you want to create an image 
docker build -t my-node-app .

It will create the docker container
docker run "image name" ===> this method will lock cmd
docker run -d "image name" ===> this method will not lock cmd


This command will assigned port no numeber for machine ==> this is port mapping method
docker run -p 5000:5000 myapp
=> this method will not block CMD
docker run -d -p 3000:3000 myapp

It will show docker network 
docker network ls

It will inspect docker network detailed
docker network inspect "bridge"
docker network inspect "host"
docker network inspect "null"


docker run -dit --name con1 alpine ash


If you want to go inside container and you can use container name or ID
docker attach con1

If you want to exit the container use this  and if you exited the container it will automaticall stop container
exit

This  command is container to container communication 
ping "container IP"
ctrl + C


This command  will create own network bridge 
docker network create --driver bridge my-net


docker run -dit --name con100 --network mynet alpine ash

This shoutcut will exit from container 
ctrl + p + q


This command will create container and assign the volume of the storage
docker run -d --name nginx_container -v nginx_logs:/var/log/nginx nginx


inspect is the command of check whatever you want to check detailed
doncker inspect "---"


this command also enter to conatiner
docker exec -it "containername" bash
i====> Interactive
t====> Terimnal


docker inspect volume my_volume
