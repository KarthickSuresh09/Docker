Hypervisor container method

==> Hypervior applications have seperate OS
==> operstional cost is very high


[ A ] [ A ] [ A ] [ A ]
[ P ] [ P ] [ P ] [ P ]
[ P ] [ P ] [ P ] [ P ]
[ o ] [ O ] [ o ] [ o ]
[ s ] [ s ] [ s ] [ s ]
|-----------------------|
|       Hypervisor      |
|-----------------------|
|   OPERATING SYSTEM    |
|-----------------------|
|       Hardware        |
|-----------------------|




What is Container? 
  
A container is a standard unit of software that packages up code and all its dependencies
so the application runs quickly and reliably from one computing environment to another. 
A Docker container image is a lightweight, standalone, executable package of software 
that includeseverything needed to run an application: code, runtime, system tools, system libraries and settings


                              OR


CONTAINER##
  * Container is Nothing but an OS process, that behaves like a VM 


🔍 What is runc?
runc is a CLI tool for spawning and running containers according to the Open Container Initiative (OCI) specification.
It is written in Go and maintained by the OCI community, originally extracted from Docker's low-level runtime (libcontainer).


                     CONTAINER APPLICATION
[ A ] [ A ] [ A ] [ A ]
[ P ] [ P ] [ P ] [ P ]
[ P ] [ P ] [ P ] [ P ]
[   ] [   ] [   ] [   ]
[ 1 ] [ 2 ] [ 3 ] [ 4 ]
|-----------------------|
|       RUN=>c          |     ====>
|-----------------------|
| HOST OPERATING SYSTEM |
|-----------------------|
|       Hardware        |
|-----------------------|

it will list all the containers
docker ps

=====> Docker container Appliction

[ A ] [ A ] [ A ] [ A ]
[ P ] [ P ] [ P ] [ P ]
[ P ] [ P ] [ P ] [ P ]
[   ] [   ] [   ] [   ]
[ 1 ] [ 2 ] [ 3 ] [ 4 ]
|-----------------------|
|       DOCKER          |     
|-----------------------|
| HOST OPERATING SYSTEM |
|-----------------------|
|    INFRASTRUCTURE     |
|-----------------------|

docker run -d nginx

CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
root@ip-172-31-11-30:/home/ubuntu# docker run -d nginx
Unable to find image 'nginx:latest' locally
latest: Pulling from library/nginx
6e909acdb790: Pull complete 
5eaa34f5b9c2: Pull complete 
417c4bccf534: Pull complete 
e7e0ca015e55: Pull complete 
373fe654e984: Pull complete 
97f5c0f51d43: Pull complete 
c22eb46e871a: Pull complete 
Digest: sha256:124b44bfc9ccd1f3cedf4b592d4d1e8bddb78b51ec2ed5056c52d3692baebc19
Status: Downloaded newer image for nginx:latest
bc0c18626ef56bb9e38b252d8d66df1ce57d1e0322c741db3cc210e99938d3ff




ps -ef
ps -aux 
ps -aux | grep -i nginx 
(this parent process)root        3306  0.0  0.1  11456  7424 ?        Ss   08:36   0:00 nginx: master process nginx -g daemon off;
(this worker process)message+    3353  0.0  0.0  11920  3052 ?        S    08:36   0:00 nginx: worker process
(this worker process)message+    3354  0.0  0.0  11920  3052 ?        S    08:36   0:00 nginx: worker process


killing the process 
kill -9 processID


#1; We created a NGINX Conatiner ===>#: List down the conatiner docker ps ======># grep Nginx process ps command ====>
#Kill the NGINX Process =====>#When we killed the processthe conatiner also got killed ======>With this, Can I say thatCOnatiner is NOTHINg but and OS Process ===>
This is what Really a COnatiner is =======>Conatiner# Conatiner is NOTHING but an OSprocess, that behaves like a VM =======>Using the LiNUX kernel feature of NS and Cgroup

