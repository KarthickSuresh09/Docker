Docker swarm
* Docker Swarm is docker's native container orchestration tool.
* Manage a cluster of docker nodes as a single virtual systems.
* Depoyl, Scale and Manage contarnized application across multiple nodes.

|______________________________________________________________________________________________________________|
|                                                                                                              |
|                 MASTER   ( C )==> Container                     WORKER                                       | 
|               ----------------                    |------------------|                                       |
|               |              |                    |                  | ( C )                                 |
|               | 65.0.105.80  |                    |  3.110.87.96     |                                       | ====> Docker
|               |              |                    |                  | ( C )                                 |       Swarm
|               |              |                    |                  |                                       |      Cluster
|               ----------------                    |------------------|                                       |
|                                                                                                              |
|                                                                                                              |
|______________________________________________________________________________________________________________|


Master step1 :
docker swarm init
docker swarm init --advertise-addr 65.0.105.80

To remove docker swarm
docker swarm leave --force

Master Step2 :
To cross verfiy docker node is running
docker node ls
root@ip-172-31-11-30:/home/ubuntu# docker node ls
ID                            HOSTNAME          STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION
t316qsy839nzepdl1mx58ggue *   ip-172-31-11-30   Ready     Active         Leader           28.0.4


Worker Step 3 :
Swarm initialized: current node (t316qsy839nzepdl1mx58ggue) is now a manager.

To add a worker to this swarm, run the following command:

    docker swarm join --token SWMTKN-1-1meyvux1p11ng7m32hwz7vey9x5a6fxb4ucdl51iwi8mk8xme9-bf79iei0zirouimunj92jg0s3 65.0.105.80:2377

To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

Confiration of worker node
This node joined a swarm as a worker.


Master Ste4 :
again to check worker added or not
ID                            HOSTNAME           STATUS    AVAILABILITY   MANAGER STATUS   ENGINE VERSION
t316qsy839nzepdl1mx58ggue *   ip-172-31-11-30    Ready     Active         Leader           28.0.4
8h4wofa41s1b5oplnboqpl1ng     ip-172-31-39-127   Ready     Active                          28.0.4

private IP Master Node: 172.31.11.30
private IP Worker Node: 172.31.39.127


Master Step 5 :
We are creating services not creating directly cluster
docker service create --name nginx --replicas 3 -p 80:80 nginx

name = nginx
--replicas 3 = creating copies 
80:80 = metioned port 
nginx = mentioned image

Master & Worker Step 6:
verify the containers 
Master :
docker service ls 
root@ip-172-31-11-30:/home/ubuntu# docker service ls
ID             NAME      MODE         REPLICAS   IMAGE          PORTS
3mj5hm4z1u6z   nginx     replicated   3/3        nginx:latest   *:80->80/tcp

docker ps
root@ip-172-31-11-30:/home/ubuntu# docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS     NAMES
43e9ad59d659   nginx:latest   "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   80/tcp    nginx.2.za4kbdf1clodwx5zniudej22s

Worker :
docker ps
root@ip-172-31-39-127:/home/ubuntu# docker ps
CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS     NAMES
66b271f935b8   nginx:latest   "/docker-entrypoint.…"   4 minutes ago   Up 4 minutes   80/tcp    nginx.3.k0ir6pzviama7nf64djzecpsa
eb05ece8e997   nginx:latest   "/docker-entrypoint.…"   4 minutes ago   Up 4 minutes   80/tcp    nginx.1.rr8pk9ickjxcimjqcr369by9s

